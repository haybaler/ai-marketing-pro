/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ai/analyze-context/route";
exports.ids = ["app/api/ai/analyze-context/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fanalyze-context%2Froute&page=%2Fapi%2Fai%2Fanalyze-context%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fanalyze-context%2Froute.js&appDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fanalyze-context%2Froute&page=%2Fapi%2Fai%2Fanalyze-context%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fanalyze-context%2Froute.js&appDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_joshuahaydon_ai_marketing_pro_src_app_api_ai_analyze_context_route_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/ai/analyze-context/route.js */ \"(rsc)/./src/app/api/ai/analyze-context/route.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ai/analyze-context/route\",\n        pathname: \"/api/ai/analyze-context\",\n        filename: \"route\",\n        bundlePath: \"app/api/ai/analyze-context/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/joshuahaydon/ai-marketing-pro/src/app/api/ai/analyze-context/route.js\",\n    nextConfigOutput,\n    userland: _Users_joshuahaydon_ai_marketing_pro_src_app_api_ai_analyze_context_route_js__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/ai/analyze-context/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fanalyze-context%2Froute&page=%2Fapi%2Fai%2Fanalyze-context%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fanalyze-context%2Froute.js&appDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/ai/analyze-context/route.js":
/*!*************************************************!*\
  !*** ./src/app/api/ai/analyze-context/route.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _mendable_firecrawl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mendable/firecrawl-js */ \"(rsc)/./node_modules/@mendable/firecrawl-js/dist/index.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\n\n\n// Initialize services\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://xuhreqjmarcukbcxymgs.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\nconst firecrawl = process.env.FIRECRAWL_API_KEY ? new _mendable_firecrawl_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: process.env.FIRECRAWL_API_KEY\n}) : null;\nconst openai = process.env.OPENAI_API_KEY ? new openai__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n}) : null;\n// Serper API integration (manual implementation)\nasync function searchWithSerper(query) {\n    try {\n        const response = await fetch('https://google.serper.dev/search', {\n            method: 'POST',\n            headers: {\n                'X-API-KEY': process.env.SERPER_API_KEY,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                q: query,\n                num: 5\n            })\n        });\n        if (!response.ok) {\n            throw new Error('Serper API request failed');\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Serper search failed:', error);\n        return null;\n    }\n}\nasync function POST(req) {\n    try {\n        const { url, userId } = await req.json();\n        if (!url) {\n            return new Response(JSON.stringify({\n                error: 'URL is required'\n            }), {\n                status: 400,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        // Check for required services\n        if (!firecrawl || !openai || !process.env.SERPER_API_KEY || !supabase) {\n            console.error('Missing required services - check environment variables');\n            return new Response(JSON.stringify({\n                error: 'Service configuration error',\n                details: 'One or more required services are not configured. Please check the server logs.'\n            }), {\n                status: 503,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        // Validate URL format\n        try {\n            new URL(url);\n        } catch  {\n            return new Response(JSON.stringify({\n                error: 'Invalid URL format'\n            }), {\n                status: 400,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        // Check if context already exists and is recent (within 24 hours)\n        const { data: existingContext } = await supabase.from('website_contexts').select('*').eq('url', url).eq('status', 'completed').gte('created_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()).single();\n        if (existingContext) {\n            return new Response(JSON.stringify({\n                success: true,\n                contextId: existingContext.id,\n                cached: true,\n                summary: {\n                    pagesAnalyzed: 1,\n                    searchTerms: existingContext.search_terms?.length || 0,\n                    competitorData: existingContext.search_results?.length || 0\n                }\n            }), {\n                status: 200,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        // Create initial context record\n        const { data: initialContext, error: insertError } = await supabase.from('website_contexts').insert([\n            {\n                url,\n                user_id: userId,\n                status: 'analyzing'\n            }\n        ]).select().single();\n        if (insertError) {\n            console.error('Database insert error:', insertError);\n            throw new Error('Failed to create context record');\n        }\n        // Step 1: Crawl the website with Firecrawl\n        let crawlResult;\n        try {\n            crawlResult = await firecrawl.scrapeUrl(url, {\n                formats: [\n                    'markdown'\n                ],\n                onlyMainContent: true\n            });\n        } catch (error) {\n            console.error('Firecrawl error:', error);\n            await supabase.from('website_contexts').update({\n                status: 'failed',\n                analysis_summary: {\n                    error: 'Failed to crawl website'\n                }\n            }).eq('id', initialContext.id);\n            // More user-friendly error message in production\n            const errorMessage =  false ? 0 : error.message;\n            return new Response(JSON.stringify({\n                error: 'Failed to crawl website',\n                details: errorMessage\n            }), {\n                status: 500,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        if (!crawlResult.success) {\n            await supabase.from('website_contexts').update({\n                status: 'failed',\n                analysis_summary: {\n                    error: 'Website crawl unsuccessful'\n                }\n            }).eq('id', initialContext.id);\n            return new Response(JSON.stringify({\n                error: 'Website crawl unsuccessful',\n                details: crawlResult.error || 'Unknown crawl error'\n            }), {\n                status: 500,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        // Step 2: Extract key content and metadata\n        // Handle different Firecrawl response formats\n        const data = crawlResult.data || crawlResult;\n        const metadata = data.metadata || {};\n        const pageContent = {\n            url: metadata.url || data.url || url,\n            title: metadata.title || data.title || '',\n            description: metadata.description || data.description || '',\n            content: data.markdown || data.content || '',\n            keywords: metadata.keywords || data.keywords || []\n        };\n        // Step 3: Generate simple search terms (no AI parsing)\n        const searchTerms = generateSimpleSearchTerms(pageContent);\n        // Step 4: Use Serper to get competitive data (only if we have search terms)\n        const searchResults = [];\n        if (searchTerms.length > 0) {\n            // Only search for top 3 terms to avoid API limits\n            const topSearchTerms = searchTerms.slice(0, 3);\n            for (const term of topSearchTerms){\n                const result = await searchWithSerper(term);\n                if (result) {\n                    searchResults.push({\n                        query: term,\n                        ...result\n                    });\n                }\n            }\n        }\n        // Step 5: Generate simple analysis summary (no JSON parsing)\n        const analysisSummary = await generateSimpleAnalysisSummary(pageContent, searchResults);\n        // Step 6: Store completed context in database\n        const { data: completedContext, error: updateError } = await supabase.from('website_contexts').update({\n            page_content: [\n                pageContent\n            ],\n            search_terms: searchTerms,\n            search_results: searchResults,\n            analysis_summary: analysisSummary,\n            analyzed_at: new Date().toISOString(),\n            status: 'completed'\n        }).eq('id', initialContext.id).select().single();\n        if (updateError) {\n            console.error('Database update error:', updateError);\n            throw new Error('Failed to update context');\n        }\n        return new Response(JSON.stringify({\n            success: true,\n            contextId: completedContext.id,\n            cached: false,\n            summary: {\n                pagesAnalyzed: 1,\n                searchTerms: searchTerms.length,\n                competitorData: searchResults.length\n            }\n        }), {\n            status: 200,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    } catch (error) {\n        console.error('Context analysis error:', error);\n        return new Response(JSON.stringify({\n            error: 'Failed to analyze context',\n            details: error.message\n        }), {\n            status: 500,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n}\nfunction generateSimpleSearchTerms(pageContent) {\n    const searchTerms = [];\n    // Add title words\n    if (pageContent.title) {\n        const titleWords = pageContent.title.toLowerCase().split(/\\s+/);\n        titleWords.forEach((word)=>{\n            if (word.length > 3 && !searchTerms.includes(word)) {\n                searchTerms.push(word);\n            }\n        });\n    }\n    // Add description words\n    if (pageContent.description) {\n        const descWords = pageContent.description.toLowerCase().split(/\\s+/);\n        descWords.forEach((word)=>{\n            if (word.length > 3 && !searchTerms.includes(word)) {\n                searchTerms.push(word);\n            }\n        });\n    }\n    // Add keywords if available\n    if (pageContent.keywords && pageContent.keywords.length > 0) {\n        pageContent.keywords.forEach((keyword)=>{\n            if (!searchTerms.includes(keyword.toLowerCase())) {\n                searchTerms.push(keyword.toLowerCase());\n            }\n        });\n    }\n    // Extract from content if we don't have enough terms\n    if (searchTerms.length < 5 && pageContent.content) {\n        const words = pageContent.content.toLowerCase().match(/\\b\\w+\\b/g) || [];\n        const wordCount = {};\n        words.forEach((word)=>{\n            if (word.length > 4) {\n                wordCount[word] = (wordCount[word] || 0) + 1;\n            }\n        });\n        const topWords = Object.entries(wordCount).sort(([, a], [, b])=>b - a).slice(0, 10).map(([word])=>word);\n        topWords.forEach((word)=>{\n            if (!searchTerms.includes(word) && searchTerms.length < 8) {\n                searchTerms.push(word);\n            }\n        });\n    }\n    return searchTerms.slice(0, 6) // Limit to 6 terms\n    ;\n}\nasync function generateSimpleAnalysisSummary(pageContent, searchResults) {\n    try {\n        const response = await openai.chat.completions.create({\n            model: 'gpt-3.5-turbo',\n            messages: [\n                {\n                    role: 'system',\n                    content: `You are a marketing analyst. Analyze the website content and provide a brief business overview. Keep it simple and actionable.`\n                },\n                {\n                    role: 'user',\n                    content: `Website: ${pageContent.title}\\nDescription: ${pageContent.description}\\nContent: ${pageContent.content.slice(0, 1000)}\\n\\nProvide a brief business overview in 2-3 sentences.`\n                }\n            ],\n            temperature: 0.7,\n            max_tokens: 200\n        });\n        const businessOverview = response.choices[0].message.content.trim();\n        return {\n            business_overview: businessOverview,\n            key_strengths: [\n                \"Website analysis completed\"\n            ],\n            market_opportunities: [\n                \"Competitive research available\"\n            ],\n            competitive_landscape: `Found ${searchResults.length} search results for competitive analysis`,\n            recommended_focus_areas: [\n                \"Content optimization\",\n                \"SEO improvement\"\n            ]\n        };\n    } catch (error) {\n        console.error('Analysis summary generation failed:', error);\n        return {\n            business_overview: `Website analysis for ${pageContent.title || 'the provided URL'}`,\n            key_strengths: [\n                \"Website crawled successfully\"\n            ],\n            market_opportunities: [\n                \"Market research completed\"\n            ],\n            competitive_landscape: `Analyzed ${searchResults.length} competitive data points`,\n            recommended_focus_areas: [\n                \"Marketing strategy\",\n                \"Content improvement\"\n            ]\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9haS9hbmFseXplLWNvbnRleHQvcm91dGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNIO0FBQ3RCO0FBRTNCLHNCQUFzQjtBQUN0QixNQUFNRyxXQUFXSCxtRUFBWUEsQ0FDM0JJLDBDQUFvQyxFQUNwQ0EsUUFBUUMsR0FBRyxDQUFDRSx5QkFBeUI7QUFHdkMsTUFBTUMsWUFBWUosUUFBUUMsR0FBRyxDQUFDSSxpQkFBaUIsR0FBRyxJQUFJUiw4REFBWUEsQ0FBQztJQUNqRVMsUUFBUU4sUUFBUUMsR0FBRyxDQUFDSSxpQkFBaUI7QUFDdkMsS0FBSztBQUVMLE1BQU1FLFNBQVNQLFFBQVFDLEdBQUcsQ0FBQ08sY0FBYyxHQUFHLElBQUlWLDhDQUFNQSxDQUFDO0lBQ3JEUSxRQUFRTixRQUFRQyxHQUFHLENBQUNPLGNBQWM7QUFDcEMsS0FBSztBQUVMLGlEQUFpRDtBQUNqRCxlQUFlQyxpQkFBaUJDLEtBQUs7SUFDbkMsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxvQ0FBb0M7WUFDL0RDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxhQUFhZCxRQUFRQyxHQUFHLENBQUNjLGNBQWM7Z0JBQ3ZDLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CQyxHQUFHVDtnQkFDSFUsS0FBSztZQUNQO1FBQ0Y7UUFFQSxJQUFJLENBQUNULFNBQVNVLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFFQSxPQUFPLE1BQU1YLFNBQVNZLElBQUk7SUFDNUIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE9BQU87SUFDVDtBQUNGO0FBRU8sZUFBZUUsS0FBS0MsR0FBRztJQUM1QixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1GLElBQUlKLElBQUk7UUFFdEMsSUFBSSxDQUFD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LEdBQUcsTUFBTSx1REFBdUQsQ0FBQztnQkFDMUw7YUFDRDtZQUNEa0MsYUFBYTtZQUNiQyxZQUFZO1FBQ2Q7UUFFQSxNQUFNQyxtQkFBbUJ0RyxTQUFTdUcsT0FBTyxDQUFDLEVBQUUsQ0FBQ2hELE9BQU8sQ0FBQ0ssT0FBTyxDQUFDNEMsSUFBSTtRQUVqRSxPQUFPO1lBQ0xDLG1CQUFtQkg7WUFDbkJJLGVBQWU7Z0JBQUM7YUFBNkI7WUFDN0NDLHNCQUFzQjtnQkFBQzthQUFpQztZQUN4REMsdUJBQXVCLENBQUMsTUFBTSxFQUFFNUMsY0FBY3ZCLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQztZQUM5Rm9FLHlCQUF5QjtnQkFBQztnQkFBd0I7YUFBa0I7UUFDdEU7SUFDRixFQUFFLE9BQU9oRyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyx1Q0FBdUNBO1FBQ3JELE9BQU87WUFDTDRGLG1CQUFtQixDQUFDLHFCQUFxQixFQUFFaEQsWUFBWUMsS0FBSyxJQUFJLG9CQUFvQjtZQUNwRmdELGVBQWU7Z0JBQUM7YUFBK0I7WUFDL0NDLHNCQUFzQjtnQkFBQzthQUE0QjtZQUNuREMsdUJBQXVCLENBQUMsU0FBUyxFQUFFNUMsY0FBY3ZCLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQztZQUNqRm9FLHlCQUF5QjtnQkFBQztnQkFBc0I7YUFBc0I7UUFDeEU7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvam9zaHVhaGF5ZG9uL2FpLW1hcmtldGluZy1wcm8vc3JjL2FwcC9hcGkvYWkvYW5hbHl6ZS1jb250ZXh0L3JvdXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcbmltcG9ydCBGaXJlY3Jhd2xBcHAgZnJvbSAnQG1lbmRhYmxlL2ZpcmVjcmF3bC1qcydcbmltcG9ydCBPcGVuQUkgZnJvbSAnb3BlbmFpJ1xuXG4vLyBJbml0aWFsaXplIHNlcnZpY2VzXG5jb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChcbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMLFxuICBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZXG4pXG5cbmNvbnN0IGZpcmVjcmF3bCA9IHByb2Nlc3MuZW52LkZJUkVDUkFXTF9BUElfS0VZID8gbmV3IEZpcmVjcmF3bEFwcCh7XG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuRklSRUNSQVdMX0FQSV9LRVlcbn0pIDogbnVsbFxuXG5jb25zdCBvcGVuYWkgPSBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSA/IG5ldyBPcGVuQUkoe1xuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZXG59KSA6IG51bGxcblxuLy8gU2VycGVyIEFQSSBpbnRlZ3JhdGlvbiAobWFudWFsIGltcGxlbWVudGF0aW9uKVxuYXN5bmMgZnVuY3Rpb24gc2VhcmNoV2l0aFNlcnBlcihxdWVyeSkge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZ29vZ2xlLnNlcnBlci5kZXYvc2VhcmNoJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdYLUFQSS1LRVknOiBwcm9jZXNzLmVudi5TRVJQRVJfQVBJX0tFWSxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcTogcXVlcnksXG4gICAgICAgIG51bTogNVxuICAgICAgfSlcbiAgICB9KVxuICAgIFxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU2VycGVyIEFQSSByZXF1ZXN0IGZhaWxlZCcpXG4gICAgfVxuICAgIFxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTZXJwZXIgc2VhcmNoIGZhaWxlZDonLCBlcnJvcilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcSkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgdXJsLCB1c2VySWQgfSA9IGF3YWl0IHJlcS5qc29uKClcblxuICAgIGlmICghdXJsKSB7XG4gICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6ICdVUkwgaXMgcmVxdWlyZWQnIH0pLCB7XG4gICAgICAgIHN0YXR1czogNDAwLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgZm9yIHJlcXVpcmVkIHNlcnZpY2VzXG4gICAgaWYgKCFmaXJlY3Jhd2wgfHwgIW9wZW5haSB8fCAhcHJvY2Vzcy5lbnYuU0VSUEVSX0FQSV9LRVkgfHwgIXN1cGFiYXNlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNaXNzaW5nIHJlcXVpcmVkIHNlcnZpY2VzIC0gY2hlY2sgZW52aXJvbm1lbnQgdmFyaWFibGVzJylcbiAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBcbiAgICAgICAgZXJyb3I6ICdTZXJ2aWNlIGNvbmZpZ3VyYXRpb24gZXJyb3InLFxuICAgICAgICBkZXRhaWxzOiAnT25lIG9yIG1vcmUgcmVxdWlyZWQgc2VydmljZXMgYXJlIG5vdCBjb25maWd1cmVkLiBQbGVhc2UgY2hlY2sgdGhlIHNlcnZlciBsb2dzLidcbiAgICAgIH0pLCB7XG4gICAgICAgIHN0YXR1czogNTAzLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgVVJMIGZvcm1hdFxuICAgIHRyeSB7XG4gICAgICBuZXcgVVJMKHVybClcbiAgICB9IGNhdGNoIHtcbiAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogJ0ludmFsaWQgVVJMIGZvcm1hdCcgfSksIHtcbiAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiBjb250ZXh0IGFscmVhZHkgZXhpc3RzIGFuZCBpcyByZWNlbnQgKHdpdGhpbiAyNCBob3VycylcbiAgICBjb25zdCB7IGRhdGE6IGV4aXN0aW5nQ29udGV4dCB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd3ZWJzaXRlX2NvbnRleHRzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLmVxKCd1cmwnLCB1cmwpXG4gICAgICAuZXEoJ3N0YXR1cycsICdjb21wbGV0ZWQnKVxuICAgICAgLmd0ZSgnY3JlYXRlZF9hdCcsIG5ldyBEYXRlKERhdGUubm93KCkgLSAyNCAqIDYwICogNjAgKiAxMDAwKS50b0lTT1N0cmluZygpKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXhpc3RpbmdDb250ZXh0KSB7XG4gICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGNvbnRleHRJZDogZXhpc3RpbmdDb250ZXh0LmlkLFxuICAgICAgICBjYWNoZWQ6IHRydWUsXG4gICAgICAgIHN1bW1hcnk6IHtcbiAgICAgICAgICBwYWdlc0FuYWx5emVkOiAxLFxuICAgICAgICAgIHNlYXJjaFRlcm1zOiBleGlzdGluZ0NvbnRleHQuc2VhcmNoX3Rlcm1zPy5sZW5ndGggfHwgMCxcbiAgICAgICAgICBjb21wZXRpdG9yRGF0YTogZXhpc3RpbmdDb250ZXh0LnNlYXJjaF9yZXN1bHRzPy5sZW5ndGggfHwgMFxuICAgICAgICB9XG4gICAgICB9KSwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICB9KVxuICAgIH1cblxuICAgIC8vIENyZWF0ZSBpbml0aWFsIGNvbnRleHQgcmVjb3JkXG4gICAgY29uc3QgeyBkYXRhOiBpbml0aWFsQ29udGV4dCwgZXJyb3I6IGluc2VydEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3dlYnNpdGVfY29udGV4dHMnKVxuICAgICAgLmluc2VydChbe1xuICAgICAgICB1cmwsXG4gICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgc3RhdHVzOiAnYW5hbHl6aW5nJ1xuICAgICAgfV0pXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGluc2VydEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBpbnNlcnQgZXJyb3I6JywgaW5zZXJ0RXJyb3IpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgY29udGV4dCByZWNvcmQnKVxuICAgIH1cblxuICAgIC8vIFN0ZXAgMTogQ3Jhd2wgdGhlIHdlYnNpdGUgd2l0aCBGaXJlY3Jhd2xcbiAgICBsZXQgY3Jhd2xSZXN1bHRcbiAgICB0cnkge1xuICAgICAgY3Jhd2xSZXN1bHQgPSBhd2FpdCBmaXJlY3Jhd2wuc2NyYXBlVXJsKHVybCwge1xuICAgICAgICBmb3JtYXRzOiBbJ21hcmtkb3duJ10sXG4gICAgICAgIG9ubHlNYWluQ29udGVudDogdHJ1ZVxuICAgICAgfSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmlyZWNyYXdsIGVycm9yOicsIGVycm9yKVxuICAgICAgYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3dlYnNpdGVfY29udGV4dHMnKVxuICAgICAgICAudXBkYXRlKHsgc3RhdHVzOiAnZmFpbGVkJywgYW5hbHlzaXNfc3VtbWFyeTogeyBlcnJvcjogJ0ZhaWxlZCB0byBjcmF3bCB3ZWJzaXRlJyB9IH0pXG4gICAgICAgIC5lcSgnaWQnLCBpbml0aWFsQ29udGV4dC5pZClcbiAgICAgIFxuICAgICAgLy8gTW9yZSB1c2VyLWZyaWVuZGx5IGVycm9yIG1lc3NhZ2UgaW4gcHJvZHVjdGlvblxuICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyBcbiAgICAgICAgPyAnVW5hYmxlIHRvIGFuYWx5emUgdGhpcyB3ZWJzaXRlLiBQbGVhc2UgdHJ5IGEgZGlmZmVyZW50IFVSTCBvciB0cnkgYWdhaW4gbGF0ZXIuJ1xuICAgICAgICA6IGVycm9yLm1lc3NhZ2VcbiAgICAgIFxuICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IFxuICAgICAgICBlcnJvcjogJ0ZhaWxlZCB0byBjcmF3bCB3ZWJzaXRlJyxcbiAgICAgICAgZGV0YWlsczogZXJyb3JNZXNzYWdlIFxuICAgICAgfSksIHtcbiAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAoIWNyYXdsUmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgIGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd3ZWJzaXRlX2NvbnRleHRzJylcbiAgICAgICAgLnVwZGF0ZSh7IHN0YXR1czogJ2ZhaWxlZCcsIGFuYWx5c2lzX3N1bW1hcnk6IHsgZXJyb3I6ICdXZWJzaXRlIGNyYXdsIHVuc3VjY2Vzc2Z1bCcgfSB9KVxuICAgICAgICAuZXEoJ2lkJywgaW5pdGlhbENvbnRleHQuaWQpXG5cbiAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBcbiAgICAgICAgZXJyb3I6ICdXZWJzaXRlIGNyYXdsIHVuc3VjY2Vzc2Z1bCcsXG4gICAgICAgIGRldGFpbHM6IGNyYXdsUmVzdWx0LmVycm9yIHx8ICdVbmtub3duIGNyYXdsIGVycm9yJ1xuICAgICAgfSksIHtcbiAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBTdGVwIDI6IEV4dHJhY3Qga2V5IGNvbnRlbnQgYW5kIG1ldGFkYXRhXG4gICAgLy8gSGFuZGxlIGRpZmZlcmVudCBGaXJlY3Jhd2wgcmVzcG9uc2UgZm9ybWF0c1xuICAgIGNvbnN0IGRhdGEgPSBjcmF3bFJlc3VsdC5kYXRhIHx8IGNyYXdsUmVzdWx0XG4gICAgY29uc3QgbWV0YWRhdGEgPSBkYXRhLm1ldGFkYXRhIHx8IHt9XG4gICAgXG4gICAgY29uc3QgcGFnZUNvbnRlbnQgPSB7XG4gICAgICB1cmw6IG1ldGFkYXRhLnVybCB8fCBkYXRhLnVybCB8fCB1cmwsXG4gICAgICB0aXRsZTogbWV0YWRhdGEudGl0bGUgfHwgZGF0YS50aXRsZSB8fCAnJyxcbiAgICAgIGRlc2NyaXB0aW9uOiBtZXRhZGF0YS5kZXNjcmlwdGlvbiB8fCBkYXRhLmRlc2NyaXB0aW9uIHx8ICcnLFxuICAgICAgY29udGVudDogZGF0YS5tYXJrZG93biB8fCBkYXRhLmNvbnRlbnQgfHwgJycsXG4gICAgICBrZXl3b3JkczogbWV0YWRhdGEua2V5d29yZHMgfHwgZGF0YS5rZXl3b3JkcyB8fCBbXVxuICAgIH1cblxuICAgIC8vIFN0ZXAgMzogR2VuZXJhdGUgc2ltcGxlIHNlYXJjaCB0ZXJtcyAobm8gQUkgcGFyc2luZylcbiAgICBjb25zdCBzZWFyY2hUZXJtcyA9IGdlbmVyYXRlU2ltcGxlU2VhcmNoVGVybXMocGFnZUNvbnRlbnQpXG5cbiAgICAvLyBTdGVwIDQ6IFVzZSBTZXJwZXIgdG8gZ2V0IGNvbXBldGl0aXZlIGRhdGEgKG9ubHkgaWYgd2UgaGF2ZSBzZWFyY2ggdGVybXMpXG4gICAgY29uc3Qgc2VhcmNoUmVzdWx0cyA9IFtdXG4gICAgaWYgKHNlYXJjaFRlcm1zLmxlbmd0aCA+IDApIHtcbiAgICAgIC8vIE9ubHkgc2VhcmNoIGZvciB0b3AgMyB0ZXJtcyB0byBhdm9pZCBBUEkgbGltaXRzXG4gICAgICBjb25zdCB0b3BTZWFyY2hUZXJtcyA9IHNlYXJjaFRlcm1zLnNsaWNlKDAsIDMpXG4gICAgICBmb3IgKGNvbnN0IHRlcm0gb2YgdG9wU2VhcmNoVGVybXMpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2VhcmNoV2l0aFNlcnBlcih0ZXJtKVxuICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgc2VhcmNoUmVzdWx0cy5wdXNoKHtcbiAgICAgICAgICAgIHF1ZXJ5OiB0ZXJtLFxuICAgICAgICAgICAgLi4ucmVzdWx0XG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFN0ZXAgNTogR2VuZXJhdGUgc2ltcGxlIGFuYWx5c2lzIHN1bW1hcnkgKG5vIEpTT04gcGFyc2luZylcbiAgICBjb25zdCBhbmFseXNpc1N1bW1hcnkgPSBhd2FpdCBnZW5lcmF0ZVNpbXBsZUFuYWx5c2lzU3VtbWFyeShwYWdlQ29udGVudCwgc2VhcmNoUmVzdWx0cylcblxuICAgIC8vIFN0ZXAgNjogU3RvcmUgY29tcGxldGVkIGNvbnRleHQgaW4gZGF0YWJhc2VcbiAgICBjb25zdCB7IGRhdGE6IGNvbXBsZXRlZENvbnRleHQsIGVycm9yOiB1cGRhdGVFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd3ZWJzaXRlX2NvbnRleHRzJylcbiAgICAgIC51cGRhdGUoe1xuICAgICAgICBwYWdlX2NvbnRlbnQ6IFtwYWdlQ29udGVudF0sXG4gICAgICAgIHNlYXJjaF90ZXJtczogc2VhcmNoVGVybXMsXG4gICAgICAgIHNlYXJjaF9yZXN1bHRzOiBzZWFyY2hSZXN1bHRzLFxuICAgICAgICBhbmFseXNpc19zdW1tYXJ5OiBhbmFseXNpc1N1bW1hcnksXG4gICAgICAgIGFuYWx5emVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIHN0YXR1czogJ2NvbXBsZXRlZCdcbiAgICAgIH0pXG4gICAgICAuZXEoJ2lkJywgaW5pdGlhbENvbnRleHQuaWQpXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKHVwZGF0ZUVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSB1cGRhdGUgZXJyb3I6JywgdXBkYXRlRXJyb3IpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byB1cGRhdGUgY29udGV4dCcpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IFxuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGNvbnRleHRJZDogY29tcGxldGVkQ29udGV4dC5pZCxcbiAgICAgIGNhY2hlZDogZmFsc2UsXG4gICAgICBzdW1tYXJ5OiB7XG4gICAgICAgIHBhZ2VzQW5hbHl6ZWQ6IDEsXG4gICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcy5sZW5ndGgsXG4gICAgICAgIGNvbXBldGl0b3JEYXRhOiBzZWFyY2hSZXN1bHRzLmxlbmd0aFxuICAgICAgfVxuICAgIH0pLCB7XG4gICAgICBzdGF0dXM6IDIwMCxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgIH0pXG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdDb250ZXh0IGFuYWx5c2lzIGVycm9yOicsIGVycm9yKVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBcbiAgICAgIGVycm9yOiAnRmFpbGVkIHRvIGFuYWx5emUgY29udGV4dCcsXG4gICAgICBkZXRhaWxzOiBlcnJvci5tZXNzYWdlIFxuICAgIH0pLCB7XG4gICAgICBzdGF0dXM6IDUwMCxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgIH0pXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVTaW1wbGVTZWFyY2hUZXJtcyhwYWdlQ29udGVudCkge1xuICBjb25zdCBzZWFyY2hUZXJtcyA9IFtdXG4gIFxuICAvLyBBZGQgdGl0bGUgd29yZHNcbiAgaWYgKHBhZ2VDb250ZW50LnRpdGxlKSB7XG4gICAgY29uc3QgdGl0bGVXb3JkcyA9IHBhZ2VDb250ZW50LnRpdGxlLnRvTG93ZXJDYXNlKCkuc3BsaXQoL1xccysvKVxuICAgIHRpdGxlV29yZHMuZm9yRWFjaCh3b3JkID0+IHtcbiAgICAgIGlmICh3b3JkLmxlbmd0aCA+IDMgJiYgIXNlYXJjaFRlcm1zLmluY2x1ZGVzKHdvcmQpKSB7XG4gICAgICAgIHNlYXJjaFRlcm1zLnB1c2god29yZClcbiAgICAgIH1cbiAgICB9KVxuICB9XG4gIFxuICAvLyBBZGQgZGVzY3JpcHRpb24gd29yZHNcbiAgaWYgKHBhZ2VDb250ZW50LmRlc2NyaXB0aW9uKSB7XG4gICAgY29uc3QgZGVzY1dvcmRzID0gcGFnZUNvbnRlbnQuZGVzY3JpcHRpb24udG9Mb3dlckNhc2UoKS5zcGxpdCgvXFxzKy8pXG4gICAgZGVzY1dvcmRzLmZvckVhY2god29yZCA9PiB7XG4gICAgICBpZiAod29yZC5sZW5ndGggPiAzICYmICFzZWFyY2hUZXJtcy5pbmNsdWRlcyh3b3JkKSkge1xuICAgICAgICBzZWFyY2hUZXJtcy5wdXNoKHdvcmQpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuICBcbiAgLy8gQWRkIGtleXdvcmRzIGlmIGF2YWlsYWJsZVxuICBpZiAocGFnZUNvbnRlbnQua2V5d29yZHMgJiYgcGFnZUNvbnRlbnQua2V5d29yZHMubGVuZ3RoID4gMCkge1xuICAgIHBhZ2VDb250ZW50LmtleXdvcmRzLmZvckVhY2goa2V5d29yZCA9PiB7XG4gICAgICBpZiAoIXNlYXJjaFRlcm1zLmluY2x1ZGVzKGtleXdvcmQudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgc2VhcmNoVGVybXMucHVzaChrZXl3b3JkLnRvTG93ZXJDYXNlKCkpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuICBcbiAgLy8gRXh0cmFjdCBmcm9tIGNvbnRlbnQgaWYgd2UgZG9uJ3QgaGF2ZSBlbm91Z2ggdGVybXNcbiAgaWYgKHNlYXJjaFRlcm1zLmxlbmd0aCA8IDUgJiYgcGFnZUNvbnRlbnQuY29udGVudCkge1xuICAgIGNvbnN0IHdvcmRzID0gcGFnZUNvbnRlbnQuY29udGVudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9cXGJcXHcrXFxiL2cpIHx8IFtdXG4gICAgY29uc3Qgd29yZENvdW50ID0ge31cbiAgICB3b3Jkcy5mb3JFYWNoKHdvcmQgPT4ge1xuICAgICAgaWYgKHdvcmQubGVuZ3RoID4gNCkge1xuICAgICAgICB3b3JkQ291bnRbd29yZF0gPSAod29yZENvdW50W3dvcmRdIHx8IDApICsgMVxuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgdG9wV29yZHMgPSBPYmplY3QuZW50cmllcyh3b3JkQ291bnQpXG4gICAgICAuc29ydCgoWyxhXSwgWyxiXSkgPT4gYiAtIGEpXG4gICAgICAuc2xpY2UoMCwgMTApXG4gICAgICAubWFwKChbd29yZF0pID0+IHdvcmQpXG4gICAgXG4gICAgdG9wV29yZHMuZm9yRWFjaCh3b3JkID0+IHtcbiAgICAgIGlmICghc2VhcmNoVGVybXMuaW5jbHVkZXMod29yZCkgJiYgc2VhcmNoVGVybXMubGVuZ3RoIDwgOCkge1xuICAgICAgICBzZWFyY2hUZXJtcy5wdXNoKHdvcmQpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuICBcbiAgcmV0dXJuIHNlYXJjaFRlcm1zLnNsaWNlKDAsIDYpIC8vIExpbWl0IHRvIDYgdGVybXNcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVTaW1wbGVBbmFseXNpc1N1bW1hcnkocGFnZUNvbnRlbnQsIHNlYXJjaFJlc3VsdHMpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG9wZW5haS5jaGF0LmNvbXBsZXRpb25zLmNyZWF0ZSh7XG4gICAgICBtb2RlbDogJ2dwdC0zLjUtdHVyYm8nLFxuICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICdzeXN0ZW0nLFxuICAgICAgICAgIGNvbnRlbnQ6IGBZb3UgYXJlIGEgbWFya2V0aW5nIGFuYWx5c3QuIEFuYWx5emUgdGhlIHdlYnNpdGUgY29udGVudCBhbmQgcHJvdmlkZSBhIGJyaWVmIGJ1c2luZXNzIG92ZXJ2aWV3LiBLZWVwIGl0IHNpbXBsZSBhbmQgYWN0aW9uYWJsZS5gXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiAndXNlcicsXG4gICAgICAgICAgY29udGVudDogYFdlYnNpdGU6ICR7cGFnZUNvbnRlbnQudGl0bGV9XFxuRGVzY3JpcHRpb246ICR7cGFnZUNvbnRlbnQuZGVzY3JpcHRpb259XFxuQ29udGVudDogJHtwYWdlQ29udGVudC5jb250ZW50LnNsaWNlKDAsIDEwMDApfVxcblxcblByb3ZpZGUgYSBicmllZiBidXNpbmVzcyBvdmVydmlldyBpbiAyLTMgc2VudGVuY2VzLmBcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHRlbXBlcmF0dXJlOiAwLjcsXG4gICAgICBtYXhfdG9rZW5zOiAyMDBcbiAgICB9KVxuXG4gICAgY29uc3QgYnVzaW5lc3NPdmVydmlldyA9IHJlc3BvbnNlLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50LnRyaW0oKVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBidXNpbmVzc19vdmVydmlldzogYnVzaW5lc3NPdmVydmlldyxcbiAgICAgIGtleV9zdHJlbmd0aHM6IFtcIldlYnNpdGUgYW5hbHlzaXMgY29tcGxldGVkXCJdLFxuICAgICAgbWFya2V0X29wcG9ydHVuaXRpZXM6IFtcIkNvbXBldGl0aXZlIHJlc2VhcmNoIGF2YWlsYWJsZVwiXSxcbiAgICAgIGNvbXBldGl0aXZlX2xhbmRzY2FwZTogYEZvdW5kICR7c2VhcmNoUmVzdWx0cy5sZW5ndGh9IHNlYXJjaCByZXN1bHRzIGZvciBjb21wZXRpdGl2ZSBhbmFseXNpc2AsXG4gICAgICByZWNvbW1lbmRlZF9mb2N1c19hcmVhczogW1wiQ29udGVudCBvcHRpbWl6YXRpb25cIiwgXCJTRU8gaW1wcm92ZW1lbnRcIl1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQW5hbHlzaXMgc3VtbWFyeSBnZW5lcmF0aW9uIGZhaWxlZDonLCBlcnJvcilcbiAgICByZXR1cm4ge1xuICAgICAgYnVzaW5lc3Nfb3ZlcnZpZXc6IGBXZWJzaXRlIGFuYWx5c2lzIGZvciAke3BhZ2VDb250ZW50LnRpdGxlIHx8ICd0aGUgcHJvdmlkZWQgVVJMJ31gLFxuICAgICAga2V5X3N0cmVuZ3RoczogW1wiV2Vic2l0ZSBjcmF3bGVkIHN1Y2Nlc3NmdWxseVwiXSxcbiAgICAgIG1hcmtldF9vcHBvcnR1bml0aWVzOiBbXCJNYXJrZXQgcmVzZWFyY2ggY29tcGxldGVkXCJdLFxuICAgICAgY29tcGV0aXRpdmVfbGFuZHNjYXBlOiBgQW5hbHl6ZWQgJHtzZWFyY2hSZXN1bHRzLmxlbmd0aH0gY29tcGV0aXRpdmUgZGF0YSBwb2ludHNgLFxuICAgICAgcmVjb21tZW5kZWRfZm9jdXNfYXJlYXM6IFtcIk1hcmtldGluZyBzdHJhdGVneVwiLCBcIkNvbnRlbnQgaW1wcm92ZW1lbnRcIl1cbiAgICB9XG4gIH1cbn0gIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsIkZpcmVjcmF3bEFwcCIsIk9wZW5BSSIsInN1cGFiYXNlIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJmaXJlY3Jhd2wiLCJGSVJFQ1JBV0xfQVBJX0tFWSIsImFwaUtleSIsIm9wZW5haSIsIk9QRU5BSV9BUElfS0VZIiwic2VhcmNoV2l0aFNlcnBlciIsInF1ZXJ5IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJTRVJQRVJfQVBJX0tFWSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicSIsIm51bSIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiUE9TVCIsInJlcSIsInVybCIsInVzZXJJZCIsIlJlc3BvbnNlIiwic3RhdHVzIiwiZGV0YWlscyIsIlVSTCIsImRhdGEiLCJleGlzdGluZ0NvbnRleHQiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJndGUiLCJEYXRlIiwibm93IiwidG9JU09TdHJpbmciLCJzaW5nbGUiLCJzdWNjZXNzIiwiY29udGV4dElkIiwiaWQiLCJjYWNoZWQiLCJzdW1tYXJ5IiwicGFnZXNBbmFseXplZCIsInNlYXJjaFRlcm1zIiwic2VhcmNoX3Rlcm1zIiwibGVuZ3RoIiwiY29tcGV0aXRvckRhdGEiLCJzZWFyY2hfcmVzdWx0cyIsImluaXRpYWxDb250ZXh0IiwiaW5zZXJ0RXJyb3IiLCJpbnNlcnQiLCJ1c2VyX2lkIiwiY3Jhd2xSZXN1bHQiLCJzY3JhcGVVcmwiLCJmb3JtYXRzIiwib25seU1haW5Db250ZW50IiwidXBkYXRlIiwiYW5hbHlzaXNfc3VtbWFyeSIsImVycm9yTWVzc2FnZSIsIm1lc3NhZ2UiLCJtZXRhZGF0YSIsInBhZ2VDb250ZW50IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImNvbnRlbnQiLCJtYXJrZG93biIsImtleXdvcmRzIiwiZ2VuZXJhdGVTaW1wbGVTZWFyY2hUZXJtcyIsInNlYXJjaFJlc3VsdHMiLCJ0b3BTZWFyY2hUZXJtcyIsInNsaWNlIiwidGVybSIsInJlc3VsdCIsInB1c2giLCJhbmFseXNpc1N1bW1hcnkiLCJnZW5lcmF0ZVNpbXBsZUFuYWx5c2lzU3VtbWFyeSIsImNvbXBsZXRlZENvbnRleHQiLCJ1cGRhdGVFcnJvciIsInBhZ2VfY29udGVudCIsImFuYWx5emVkX2F0IiwidGl0bGVXb3JkcyIsInRvTG93ZXJDYXNlIiwic3BsaXQiLCJmb3JFYWNoIiwid29yZCIsImluY2x1ZGVzIiwiZGVzY1dvcmRzIiwia2V5d29yZCIsIndvcmRzIiwibWF0Y2giLCJ3b3JkQ291bnQiLCJ0b3BXb3JkcyIsIk9iamVjdCIsImVudHJpZXMiLCJzb3J0IiwiYSIsImIiLCJtYXAiLCJjaGF0IiwiY29tcGxldGlvbnMiLCJjcmVhdGUiLCJtb2RlbCIsIm1lc3NhZ2VzIiwicm9sZSIsInRlbXBlcmF0dXJlIiwibWF4X3Rva2VucyIsImJ1c2luZXNzT3ZlcnZpZXciLCJjaG9pY2VzIiwidHJpbSIsImJ1c2luZXNzX292ZXJ2aWV3Iiwia2V5X3N0cmVuZ3RocyIsIm1hcmtldF9vcHBvcnR1bml0aWVzIiwiY29tcGV0aXRpdmVfbGFuZHNjYXBlIiwicmVjb21tZW5kZWRfZm9jdXNfYXJlYXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/ai/analyze-context/route.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/openai","vendor-chunks/axios","vendor-chunks/@supabase","vendor-chunks/zod-to-json-schema","vendor-chunks/ws","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/zod","vendor-chunks/es-errors","vendor-chunks/whatwg-url","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/isows","vendor-chunks/tr46","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/typescript-event-target","vendor-chunks/@mendable","vendor-chunks/webidl-conversions","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fanalyze-context%2Froute&page=%2Fapi%2Fai%2Fanalyze-context%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fanalyze-context%2Froute.js&appDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjoshuahaydon%2Fai-marketing-pro&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();